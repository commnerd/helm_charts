apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reverse-tunnel.name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "reverse-tunnel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "reverse-tunnel.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ include "reverse-tunnel.name" . }}
          image: "commnerd/edge-reverse-tunnel:{{ .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.webServerCreds }}
                  key: username
            - name: SERVER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.webServerCreds }}
                  key: ip_address
            - name: BIND_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.tunnelDefinition }}
                  key: server_port
            - name: DEST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.tunnelDefinition }}
                  key: dest
            - name: DEST_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.tunnelDefinition }}
                  key: dest_port
          volumeMounts:
            - name: ssh-volume
              readOnly: true
              mountPath: "/tmp/.ssh"
            - name: server-secrets
              readOnly: true
              mountPath: "/root/server_creds"
            - name: tunnel-definition
              readOnly: true
              mountPath: "/root/tunnel_def"
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - echo $(ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@$(cat /root/server_creds/ip_address) netstat -ltn4 2>&1 | grep $(cat /root/tunnel_def/server_port))
            timeoutSeconds: 5
            periodSeconds: 3600
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - echo $(ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@$(cat /root/server_creds/ip_address) netstat -ltn4 2>&1 | grep $(cat /root/tunnel_def/server_port))
            timeoutSeconds: 5
          startupProbe:
            exec:
              command:
                - bash
                - -c
                - echo $(ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@$(cat /root/server_creds/ip_address) netstat -ltn4 2>&1 | grep $(cat /root/tunnel_def/server_port))
            timeoutSeconds: 5
      volumes:
        - name: ssh-volume
          secret:
            secretName: {{ .Values.secrets.idRsa }}
        - name: server-secrets
          secret:
            secretName: {{ .Values.secrets.webServerCreds }}
        - name: tunnel-definition
          secret:
            secretName: {{ .Values.secrets.tunnelDefinition }}
